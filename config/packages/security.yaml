security:
    role_hierarchy:
        ROLE_ADMIN: [ ROLE_USER ]
        ROLE_MODERATOR: [ ROLE_USER, ROLE_ADMIN ]
        ROLE_SUPER_ADMIN: [ ROLE_USER, ROLE_ADMIN, ROLE_MODERATOR, ROLE_ALLOWED_TO_SWITCH ]

    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        users_in_memory:
            memory:
                users:
                    'api': { password: '%env(string:API_ACCESS_TOKEN)%', roles: [ ROLE_USER ] }
                    'wp': { password: '%env(string:API_ACCESS_TOKEN_WP)%', roles: [ ROLE_USER ] }


        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            pattern: ^/api
            stateless: true
            provider: users_in_memory
            custom_authenticator: App\Security\ApiTokenAuthenticator

        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                # by default, the feature is enabled by checking a
                # checkbox in the login form (see below), uncomment the
                # following line to always enable it.
                always_remember_me: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/docs, roles: PUBLIC_ACCESS } # Allows accessing the Swagger UI docs
        # TODO - REMOVE COMMENT FROM BELOW
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY } # Allows accessing the Swagger UI
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/admin/share/image, roles: PUBLIC_ACCESS }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
